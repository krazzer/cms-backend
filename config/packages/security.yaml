security:

  password_hashers:
    # auto hasher with default options for the User class (and children)
    App\Entity\User: 'auto'

    # auto hasher with custom options for all PasswordAuthenticatedUserInterface instances
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
      algorithm: 'auto'
      cost:      15

  providers:
    users_in_memory: { memory: null }
    app_user_provider:
      entity:
        class: App\Entity\User\User
        property: email

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    api:
      pattern: ^/api/
      security: true
      provider: app_user_provider
      custom_authenticators:
        - App\Domain\Login\LoginAuthenticator
      stateless: false
    main:
      lazy: true
      provider: users_in_memory

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
  # - { path: ^/admin, roles: ROLE_ADMIN }
  # - { path: ^/profile, roles: ROLE_USER }